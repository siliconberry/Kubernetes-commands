import os
from slack_bolt import App
from slack_bolt.adapter.socket_mode import SocketModeHandler
import chainlit as cl

# Initialize the Slack app
slack_app = App(token=os.environ["SLACK_BOT_TOKEN"])

# Chainlit setup
@cl.on_chat_start
def start():
    cl.User(identifier="slack_user").send()

@cl.on_message
async def main(message: cl.Message):
    # Process the message and generate a response
    response = f"Received: {message.content}"
    
    # Send the response back to Chainlit
    await cl.Message(content=response).send()

    # Send the response to Slack
    slack_app.client.chat_postMessage(
        channel=os.environ["SLACK_CHANNEL_ID"],
        text=response
    )

# Slack event handler
@slack_app.event("message")
def handle_message(event, say):
    # Process the Slack message
    user_message = event["text"]
    
    # Send the message to Chainlit
    cl.Message(content=user_message, author="slack_user").send()

# Start the Socket Mode handler
if __name__ == "__main__":
    handler = SocketModeHandler(slack_app, os.environ["SLACK_APP_TOKEN"])
    handler.start()
