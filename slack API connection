import os
from slack_sdk import WebClient
from slack_sdk.socket_mode import SocketModeClient
from slack_sdk.socket_mode.request import SocketModeRequest
from slack_sdk.socket_mode.response import SocketModeResponse

# Your Slack Bot Token and App-Level Token
SLACK_BOT_TOKEN = "xoxb-your-slack-bot-token"
SLACK_APP_TOKEN = "xapp-your-slack-app-level-token"

# Initialize the WebClient and SocketModeClient
web_client = WebClient(token=SLACK_BOT_TOKEN)
socket_mode_client = SocketModeClient(
    app_token=SLACK_APP_TOKEN,
    web_client=web_client
)

# Define a handler for incoming messages
def handle_message(client: SocketModeClient, req: SocketModeRequest):
    if req.type == "events_api":
        event = req.payload['event']

        # Only process messages that are not from bots
        if event.get("type") == "message" and "bot_id" not in event:
            channel_id = event.get("channel")
            user_message = event.get("text")
            
            # Respond to the user
            response_text = f"You said: {user_message}"
            web_client.chat_postMessage(channel=channel_id, text=response_text)

        # Acknowledge the event
        response = SocketModeResponse(envelope_id=req.envelope_id)
        client.send_socket_mode_response(response)

# Attach the handler to the SocketMode client
socket_mode_client.socket_mode_request_listeners.append(handle_message)

# Connect to Slack
if __name__ == "__main__":
    socket_mode_client.connect()
    print("Socket Mode client connected and listening...")
