import logging

class RedErrorMessageFormatter(logging.Formatter):
    def format(self, record):
        if record.levelno == logging.ERROR:
            # If the log level is ERROR, format the message in red
            record.msg = f'\033[91m{record.msg}\033[0m'
        return super().format(record)

# Create a logger
logger = logging.getLogger(__name__)

# Create a console handler
ch = logging.StreamHandler()

# Create the custom formatter
formatter = RedErrorMessageFormatter('%(levelname)s: %(message)s')

# Set the formatter for the console handler
ch.setFormatter(formatter)

# Add the console handler to the logger
logger.addHandler(ch)

# Set the logging level
logger.setLevel(logging.DEBUG)

# Example usage
logger.debug('Debug message')
logger.info('Info message')
logger.warning('Warning message')
logger.error('Error message in red')
logger.critical('Critical message in red')
